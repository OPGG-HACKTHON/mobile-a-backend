name: Node.js CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.9
        ports:
            - 5432:5432
        env:
          POSTGRES_USER: postgresmobilea
          POSTGRES_PASSWORD: postgresmobilea
          POSTGRES_DB: mobilea
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: install
      run: npm install

    - name: build
      run : npm run build

    - name: lint
      run: npm run lint

    - name: db push & test code
      run: npm run db-push:ci && npm run test:ci
      env:
          SCHEMA_NAME: localschema
          DATABASE_URL: postgresql://postgresmobilea:postgresmobilea@localhost:5432/mobilea?schema=localschema
          LOL_API_KEY: ${{ secrets.LOL_API_KEY }}
          GOOGLE_AUTH_CLIENT_ID: ${{ secrets.GOOGLE_AUTH_CLIENT_ID }}
          GOOGLE_AUTH_SECRET: ${{ secrets.GOOGLE_AUTH_SECRET }}

  release:
    if: github.repository == 'OPGG-HACKTHON/mobile-a-backend'
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: install
      run: npm install

    - name: build
      run : npm run build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: mobilea
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    if: github.repository == 'OPGG-HACKTHON/mobile-a-backend'
    needs: [build, release]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: deploy
      run: echo deploy
    - name: check reponame
      run: echo ${{ github.repository }}